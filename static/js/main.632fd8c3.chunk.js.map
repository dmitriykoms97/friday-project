{"version":3,"sources":["components/super-components/input/SuperInput.module.css","components/header/header.module.css","components/super-components/button/SuperButton.module.css","components/super-components/checkbox/SuperCheckbox.module.css","components/test-superComponents/test.module.css","components/login/Login.tsx","components/registration/Registration.tsx","components/profile/Profile.tsx","components/recovery-password/RecoveryPassword.tsx","components/input-new-password/InputNewPassword.tsx","components/404notFound/ErrorNotFound.tsx","components/super-components/input/SuperInput.tsx","components/super-components/button/SuperButton.tsx","components/super-components/checkbox/SuperCheckbox.tsx","components/test-superComponents/Test.tsx","components/RoutesOf.tsx","components/header/Header.tsx","components/app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Login","Registration","Profile","RecoveryPassword","InputNewPassword","ErrorNotFound","SuperInput","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","Test","container","placeholder","PATH","RoutesOf","path","element","Header","headerContainer","navigation","to","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.632fd8c3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInput_superInput__2gclO\",\"errorInput\":\"SuperInput_errorInput__2T2Gw\",\"error\":\"SuperInput_error__1lnC9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"header_headerContainer__1YdFT\",\"navigation\":\"header_navigation__1f_tx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2RO3u\",\"red\":\"SuperButton_red__2lte4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3rti0\",\"spanClassName\":\"SuperCheckbox_spanClassName__2xkKR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"test_container__2fwkJ\"};","import React from 'react';\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div>\r\n            Login\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nconst Registration = () => {\r\n    return (\r\n        <div>\r\n            Sign Up\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Registration;","import React from 'react';\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <div>\r\n            Profile\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\n\r\nconst RecoveryPassword = () => {\r\n    return (\r\n        <div>\r\n            RecoveryPassword\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RecoveryPassword;","import React from 'react';\r\n\r\nconst InputNewPassword = () => {\r\n    return (\r\n        <div>\r\n            InputNewPassword\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InputNewPassword;","import React from 'react';\r\n\r\nconst ErrorNotFound = () => {\r\n    return (\r\n        <div>\r\n            ErrorNotFound 404\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorNotFound;","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInput.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInput: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInput\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React from 'react';\r\nimport s from './test.module.css'\r\nimport SuperInput from \"../super-components/input/SuperInput\";\r\nimport SuperButton from \"../super-components/button/SuperButton\";\r\nimport SuperCheckbox from \"../super-components/checkbox/SuperCheckbox\";\r\n\r\nconst Test = () => {\r\n    return (\r\n        <div className={s.container}>\r\n            <SuperInput placeholder='Test'/>\r\n            <SuperButton>\r\n                Test\r\n            </SuperButton>\r\n            <SuperCheckbox>\r\n                Test\r\n            </SuperCheckbox>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Test;","import React from 'react'\r\nimport {Route, Routes } from 'react-router-dom'\r\nimport Login from \"./login/Login\";\r\nimport Registration from \"./registration/Registration\";\r\nimport Profile from \"./profile/Profile\";\r\nimport RecoveryPassword from \"./recovery-password/RecoveryPassword\";\r\nimport InputNewPassword from \"./input-new-password/InputNewPassword\";\r\nimport ErrorNotFound from \"./404notFound/ErrorNotFound\";\r\nimport Test from \"./test-superComponents/Test\";\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    REGISTRATION: '/registration',\r\n    PROFILE: '/profile',\r\n    RECOVERY_PASSWORD: '/recoveryPassword',\r\n    INPUT_NEW_PASSWORD: '/inputNewPassword',\r\n    TEST: '/test',\r\n}\r\n\r\nfunction RoutesOf() {\r\n    return (\r\n        <div>\r\n            <Routes>\r\n                <Route path={'/'} element={<Login />}/>\r\n                <Route path={PATH.LOGIN} element={<Login />}/>\r\n                <Route path={PATH.REGISTRATION} element={<Registration />}/>\r\n                <Route path={PATH.PROFILE} element={<Profile />}/>\r\n                <Route path={PATH.RECOVERY_PASSWORD} element={<RecoveryPassword />}/>\r\n                <Route path={PATH.INPUT_NEW_PASSWORD} element={<InputNewPassword />}/>\r\n                <Route path={PATH.TEST} element={<Test />}/>\r\n\r\n                <Route element={<ErrorNotFound />}/>\r\n            </Routes>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RoutesOf","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './header.module.css'\r\nimport {PATH} from \"../RoutesOf\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className={s.headerContainer}>\r\n            <div className={s.navigation}>\r\n                <NavLink to={PATH.LOGIN}>Login</NavLink>\r\n                <NavLink to={PATH.REGISTRATION}>Sign Up</NavLink>\r\n                <NavLink to={PATH.PROFILE}>Profile</NavLink>\r\n                <NavLink to={PATH.RECOVERY_PASSWORD}>Password Recovery</NavLink>\r\n                <NavLink to={PATH.INPUT_NEW_PASSWORD}>Input New Password</NavLink>\r\n                <NavLink to={PATH.TEST}>Test</NavLink>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\nimport './App.css';\nimport Header from \"../header/Header\";\nimport {HashRouter} from \"react-router-dom\";\nimport RoutesOf from \"../RoutesOf\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <HashRouter>\n            <Header />\n            <RoutesOf/>\n        </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}